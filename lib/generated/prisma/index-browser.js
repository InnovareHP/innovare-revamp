
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.User_tableScalarFieldEnum = {
  id: 'id',
  user_name: 'user_name',
  user_email: 'user_email',
  user_email_verified: 'user_email_verified',
  user_image: 'user_image',
  user_created_at: 'user_created_at',
  user_updated_at: 'user_updated_at'
};

exports.Prisma.Session_tableScalarFieldEnum = {
  id: 'id',
  session_expired_at: 'session_expired_at',
  session_token: 'session_token',
  session_created_at: 'session_created_at',
  session_updated_at: 'session_updated_at',
  session_ip_address: 'session_ip_address',
  session_user_agent: 'session_user_agent',
  session_user_id: 'session_user_id',
  session_active_organization_id: 'session_active_organization_id'
};

exports.Prisma.User_account_tableScalarFieldEnum = {
  id: 'id',
  user_account_account_id: 'user_account_account_id',
  user_account_provider_id: 'user_account_provider_id',
  user_account_user_id: 'user_account_user_id',
  user_account_access_token: 'user_account_access_token',
  user_account_refresh_token: 'user_account_refresh_token',
  user_account_id_token: 'user_account_id_token',
  user_account_access_token_expires_at: 'user_account_access_token_expires_at',
  user_account_scope: 'user_account_scope',
  user_account_password: 'user_account_password',
  user_account_created_at: 'user_account_created_at',
  user_account_updated_at: 'user_account_updated_at'
};

exports.Prisma.Verification_tableScalarFieldEnum = {
  id: 'id',
  verification_identifier: 'verification_identifier',
  verification_value: 'verification_value',
  verification_expires_at: 'verification_expires_at',
  verification_created_at: 'verification_created_at',
  verification_updated_at: 'verification_updated_at'
};

exports.Prisma.Organization_tableScalarFieldEnum = {
  id: 'id',
  organization_name: 'organization_name',
  organization_slug: 'organization_slug',
  organization_logo: 'organization_logo',
  organization_created_at: 'organization_created_at',
  organization_metadata: 'organization_metadata'
};

exports.Prisma.Member_tableScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  userId: 'userId',
  member_role: 'member_role',
  member_created_at: 'member_created_at',
  member_is_onboarded: 'member_is_onboarded',
  member_position: 'member_position',
  member_bio: 'member_bio'
};

exports.Prisma.Invitation_tableScalarFieldEnum = {
  id: 'id',
  organization_id: 'organization_id',
  invitation_email: 'invitation_email',
  invitation_role: 'invitation_role',
  invitation_status: 'invitation_status',
  invitation_expires_at: 'invitation_expires_at',
  invitation_inviter_id: 'invitation_inviter_id'
};

exports.Prisma.Company_log_tableScalarFieldEnum = {
  id: 'id',
  company_log_created_at: 'company_log_created_at',
  company_log_time_in: 'company_log_time_in',
  company_log_time_out: 'company_log_time_out',
  company_log_member_id: 'company_log_member_id'
};

exports.Prisma.Company_log_task_tableScalarFieldEnum = {
  company_log_task_id: 'company_log_task_id',
  company_log_task_log_id: 'company_log_task_log_id',
  company_log_task_description: 'company_log_task_description',
  company_log_task_created_at: 'company_log_task_created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User_table: 'User_table',
  Session_table: 'Session_table',
  User_account_table: 'User_account_table',
  Verification_table: 'Verification_table',
  Organization_table: 'Organization_table',
  Member_table: 'Member_table',
  Invitation_table: 'Invitation_table',
  company_log_table: 'company_log_table',
  company_log_task_table: 'company_log_task_table'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
